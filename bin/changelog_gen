#!/usr/bin/env php
<?php
//umask(0000);
set_time_limit(0);
$output = "# Changelog \r\n";
exec('git log --tags --simplify-by-decoration --pretty="format:%ci %d"', $result);
$tagList = parseLog($result);

$lastValue = null;
foreach ($tagList as $key => $value) {
    $out = array();

    if($lastValue !== null && $value['name'] !== 'develop' && $value['name'] !== '->' && $lastValue !== '->' && $lastValue !== 'develop'){
        $headline = "## [" . $lastValue . "] - " . $lastDate ." \r\n";
        $statement = 'git log '.$value['name'].'..'. ($lastValue ? $lastValue : 'HEAD') .' --no-merges --remove-empty --ignore-missing --no-expand-tabs --encoding=UTF-8';
        exec($statement, $out);
        $list = array();
        $trimmed = '';
        $output .= $headline;
        $output = render($out, $output);

    }else { }

    $lastValue = $value['name'];
    $lastDate = $value['date'];
}

/**
 * @param $result
 * @return array
 */
function parseLog($result){
    $filteredList = array_filter($result, function($value) { return $value !== ''; } );
    $tagList = array();
    foreach ($filteredList as $tagKey => $tag){
        $tagData = explode(" ", $tag);
        if( isset($tagData[5]) || isset($tagData[8]) ){
            $date = $tagData[0];
            $time = $tagData[1];
            $timeZone = $tagData[2];
            unset($tagData[3]);
            unset($tagData[4]);
            if( isset($tagData[8]) ){
                $tagPart = $tagData[8];
            } else {
                $tagPart = $tagData[5];
            }
            $tagName = str_replace(array('(', ')', ','), array('','', ''), $tagPart);

            if($tagName !== 'develop' && $tagName !== null){

                $tagList[] = array('date' => $date, 'name' => $tagName);
            }
        }
    }

    return $tagList;
}

/**
 *
 * @param $out
 * @param $output
 * @param bool $removeFirst
 * @return string
 */
function render($out, $output, $removeFirst = false){

    $count = 0;
    $list = array();
    foreach($out as $lineKey => $line) {

        $isAuthor = strpos($line, 'Author:');
        $isDate = strpos($line, 'Date:');
        $trimmed = trim($line);
        if($isAuthor !== false || $isDate !== false || $count === 0){

        }else {
            if(isset($trimmed) && !empty($trimmed)){
                $message = str_replace(array('(', ')', ',' ,'#'), array('','', '',''), $trimmed) . "\r\n";
                if(!preg_match('/commit [0-9a-z]{40}/g', $message)){
                    $list[] = $message;
                }
            }
        }

        $count++;
    }

    if($removeFirst === true){
        unset($list[0]);
        unset($list[1]);
        unset($list[3]);
        unset($list[5]);
        unset($list[7]);
    }
    $output .= '* ' . implode('* ', $list);
    return $output;
}
// first tag
$statement = 'git log '.$value['name'].' --no-merges --remove-empty --ignore-missing --no-expand-tabs --encoding=UTF-8';
exec($statement, $out);
$output .= "## [" . $value['name'] . "] - ".$value['date']." \r\n";
$output = render($out, $output, true);

// create file
file_put_contents("CHANGELOG.md", $output);
